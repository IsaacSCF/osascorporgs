═══════════════════════════════════════════════════════════════
  📦 COMANDOS GIT PARA DEPLOY
═══════════════════════════════════════════════════════════════

COPIE E COLE ESTES COMANDOS NO TERMINAL/CMD

═══════════════════════════════════════════════════════════════
PASSO 1: CRIAR REPOSITÓRIO NO GITHUB
═══════════════════════════════════════════════════════════════

1. Acesse: https://github.com/new
2. Nome: gestao-orgs (ou outro nome)
3. Visibilidade: Privado (recomendado)
4. NÃO marque "Add a README file"
5. Clique em "Create repository"
6. COPIE a URL do repositório (exemplo: https://github.com/seu-usuario/gestao-orgs.git)

═══════════════════════════════════════════════════════════════
PASSO 2: EXECUTAR COMANDOS NO TERMINAL
═══════════════════════════════════════════════════════════════

Abra o CMD/Terminal na pasta do projeto:
c:\Users\streg\Desktop\gestão de grupos

Depois execute os comandos abaixo (um por vez):

───────────────────────────────────────────────────────────────
# 1. Inicializar repositório Git
───────────────────────────────────────────────────────────────
git init

───────────────────────────────────────────────────────────────
# 2. Adicionar todos os arquivos
───────────────────────────────────────────────────────────────
git add .

───────────────────────────────────────────────────────────────
# 3. Fazer commit inicial
───────────────────────────────────────────────────────────────
git commit -m "feat: initial commit - sistema de gestão de orgs"

───────────────────────────────────────────────────────────────
# 4. Adicionar repositório remoto
# ⚠️ SUBSTITUA a URL pela URL do seu repositório!
───────────────────────────────────────────────────────────────
git remote add origin https://github.com/SEU-USUARIO/gestao-orgs.git

───────────────────────────────────────────────────────────────
# 5. Renomear branch para main
───────────────────────────────────────────────────────────────
git branch -M main

───────────────────────────────────────────────────────────────
# 6. Fazer push para o GitHub
───────────────────────────────────────────────────────────────
git push -u origin main

═══════════════════════════════════════════════════════════════
✅ PRONTO! Código no GitHub!
═══════════════════════════════════════════════════════════════

Agora você pode:
1. Fazer deploy no Railway
2. Fazer deploy no Vercel

═══════════════════════════════════════════════════════════════
COMANDOS PARA ATUALIZAÇÕES FUTURAS
═══════════════════════════════════════════════════════════════

Quando fizer alterações no código:

───────────────────────────────────────────────────────────────
# 1. Ver arquivos modificados
───────────────────────────────────────────────────────────────
git status

───────────────────────────────────────────────────────────────
# 2. Adicionar arquivos modificados
───────────────────────────────────────────────────────────────
git add .

───────────────────────────────────────────────────────────────
# 3. Fazer commit com mensagem descritiva
───────────────────────────────────────────────────────────────
git commit -m "feat: descrição da sua alteração"

───────────────────────────────────────────────────────────────
# 4. Enviar para o GitHub
───────────────────────────────────────────────────────────────
git push

═══════════════════════════════════════════════════════════════
⚡ DEPLOY AUTOMÁTICO!
═══════════════════════════════════════════════════════════════

Após o push, Railway e Vercel farão redeploy automático! 🚀

═══════════════════════════════════════════════════════════════
COMANDOS ÚTEIS
═══════════════════════════════════════════════════════════════

# Ver histórico de commits
git log --oneline

# Ver diferenças antes de commitar
git diff

# Desfazer alterações em um arquivo
git checkout -- nome-do-arquivo

# Ver branches
git branch

# Criar nova branch
git checkout -b nome-da-branch

# Voltar para main
git checkout main

═══════════════════════════════════════════════════════════════
🆘 PROBLEMAS COMUNS
═══════════════════════════════════════════════════════════════

ERRO: "git: command not found"
→ Instale o Git: https://git-scm.com/download/win

ERRO: "remote origin already exists"
→ Execute: git remote remove origin
→ Depois execute novamente: git remote add origin URL

ERRO: "failed to push"
→ Execute: git pull origin main --rebase
→ Depois: git push

ERRO: "Permission denied"
→ Configure suas credenciais do GitHub
→ Ou use token de acesso pessoal

═══════════════════════════════════════════════════════════════
📚 PRÓXIMOS PASSOS
═══════════════════════════════════════════════════════════════

Após fazer o push:

1. ✅ Deploy Backend no Railway
   → Ver: DEPLOY_INSTRUCTIONS.md (Parte 2)

2. ✅ Deploy Frontend no Vercel
   → Ver: DEPLOY_INSTRUCTIONS.md (Parte 3)

3. ✅ Conectar Frontend e Backend
   → Ver: DEPLOY_INSTRUCTIONS.md (Parte 4)

═══════════════════════════════════════════════════════════════
📖 DOCUMENTAÇÃO
═══════════════════════════════════════════════════════════════

- QUICK_START.md - Guia rápido (10 min)
- DEPLOY_INSTRUCTIONS.md - Guia completo passo a passo
- README.md - Visão geral do projeto
- RAILWAY_VARIABLES.txt - Variáveis de ambiente

═══════════════════════════════════════════════════════════════
